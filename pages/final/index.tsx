import Head from 'next/head'
import styles from '../../styles/Home.module.css'

import type { NextPage } from 'next'
import Image from 'next/image'
import React from 'react'
import { FormEvent, useState } from 'react'
import { iDados } from '../../types/iDados'


const Bomb = () => {

    const [taxa, setTaxa] = useState('')

    const [A, setA] = useState('')
    const [B, setB] = useState('')


    const onSubmit = (e: FormEvent) => {
        e.preventDefault();

    }

    const colveFlor = async () => {
        console.log("clicou na colveflor")

        var oi = await calcular(Number(taxa))
        setA(oi[0].A)
        // setB(oi.B[1])

    }

    return (
        <div className={styles.container}>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className={styles.main}>

                <h1 className={styles.title}>
                    simulator
                </h1>

                <p className={styles.description}>
                    <label htmlFor="taxa">carteira: </label>
                    <input type="text" name="taxa" id="taxa" placeholder="numero da carteira"
                        onChange={(e) => { setTaxa(e.target.value) }}
                    />
                </p>

                clique no bot√£o abaixo

                <div className={styles.card}>

                    <Image onClick={colveFlor}
                        src="/couveFlor.png"
                        alt="colveFlor"
                        width={44}
                        height={44}
                        quality={100}
                    />
                </div>
                <div className={styles.grid}>
                    <div className={styles.card}>
                        <h2>{A}</h2>
                        <p>{B}</p>
                    </div>

                </div>
            </main>
        </div>


    )
}

const buscarValoresApiCoinGecko = async () => {
    const url_Matic = 'https://api.coingecko.com/api/v3/coins/wmatic'

    const resMatic = await fetch(url_Matic)
    const dadosMatic = await resMatic.json()

    const maticBrl = dadosMatic.market_data.current_price.brl
    const maticUsd = dadosMatic.market_data.current_price.usd

    
    const Dados: iDados = {
        moeda: "sunflower",
        maticBrl: maticBrl,
        maticUsd: maticUsd,
        sffBrl: 0,
        sffUsd: 0,
    }

    return Dados
}

const calcular = async (taxa: number) => {
    var dados: iDados = await buscarValoresApiCoinGecko()

    const A = dados.moeda
    const B = `1 ${dados.moeda} em real: R$ ${dados.sffBrl}`

    const final = [
        {
            A: A,
            B: B
        },
        {
            A: "AA",
            B: "BB"
        },
        {
            A: "CC",
            B: "DD"
        }

    ]

    //console.log(final)
    return final
}

export default Bomb